#!/bin/bash

# Entry point for the authentication application

function print_help {
    echo "usage: awsauth [-h|--help] [-a|--no-auth] [-e|--no-env]"
    echo "    no-auth: do not prompt for credentials"
    echo "    no-env:  do not update environment variables or create new shell"
}

function unsupported {
    if [ "$OPTERR" != 1 ] || [ "${optspec:0:1}" = ":" ]; then
        echo "Unsupported argument: '-${OPTARG}'"
    fi
    print_help
}

# make sure aws cli is installed
awscli=`type aws`

if [ $? -ne 0 ]; then
	echo "ERROR: AWS CLI is not installed; exiting"
	exit 1
else
	echo "Using AWS CLI found at $awscli"
fi

set -e

noauth=0
noenv=0
profile=default

# NOTE: we are using getopts, not its distant cousin, getopt, due to compatibility issues with Mac OSX' bsd heritage
optspec=":aeh-:"

while getopts "$optspec" optchar; do
    case "${optchar}" in
        -)
            case "${OPTARG}" in
                no-auth) # long version of -a
                    noauth=1
                    ;;
                no-env)  # long version of -e
                    noenv=1
                    ;;
                help)    # long version of -h
                    print_help
                    exit
                    ;;
                *)
                    unsupported
                    exit 1
                    ;;
            esac;;
        a)
            noauth=1
            ;;
        e)
            noenv=1
            ;;
        h)
            print_help
            exit
            ;;
        *)
            unsupported
            exit 1
            ;;
    esac
done

if [[ noauth -eq 0 ]]; then
    awsauthjs
fi

if [[ noenv -eq 0 ]]; then
    export AWS_ACCESS_KEY_ID=$(aws configure get aws_access_key_id --profile ${profile})
    export AWS_SECRET_ACCESS_KEY=$(aws configure get aws_secret_access_key --profile ${profile})
    export AWS_SESSION_TOKEN=$(aws configure get aws_session_token --profile ${profile})
    export AWS_DEFAULT_REGION=$(aws configure get region --profile ${profile})
    export AWS_DEFAULT_OUTPUT=$(aws configure get output --profile ${profile})

    echo "Starting new shell with AWS authentication environment variables set."

    bash --login
fi