#!/usr/bin/env node

'use strict';

// Compatibility check
const packageConfig = require('../package.json');
const compatibilityCheck = require('../lib/compatibility-checker').isNodeCompatible(packageConfig);

console.log(compatibilityCheck.msg);
if (compatibilityCheck.result === false) process.exit(1);

// add dependencies here
const readlineSync = require('readline-sync');
const chalk = require('chalk');
const config = require('../config.json');

let oktaUrl;
/* eslint-enable */

// ascii art coolness
console.log(`
 _______           _______      _______          _________         
(  ___  )|\\     /|(  ____ \\    (  ___  )|\\     /|\\__   __/|\\     /|
| (   ) || )   ( || (    \\/    | (   ) || )   ( |   ) (   | )   ( |
| (___) || | _ | || (_____     | (___) || |   | |   | |   | (___) |
|  ___  || |( )| |(_____  )    |  ___  || |   | |   | |   |  ___  |
| (   ) || || || |      ) |    | (   ) || |   | |   | |   | (   ) |
| )   ( || () () |/\\____) |    | )   ( || (___) |   | |   | )   ( |
|/     \\|(_______)\\_______)    |/     \\|(_______)   )_(   |/     \\|                                                                 
`);


console.log(chalk.black.bold.bgYellow('    AD account information    \n'));
const username = readlineSync.question(chalk.gray.underline(' USER NAME: '), {
  limit: /[a-zA-Z0-9]$/,
  limitMessage: 'No special characters allowed. Please try again'
});

const password = readlineSync.question(chalk.gray.underline(' PASSWORD:  '), { hideEchoBack: true });
const mfa = readlineSync.question(chalk.yellow.underline(' MFA CODE:  '), {
  limit: /[0-9]/,
  limitMessage: 'MFA Codes are only numeric. Please try again'
});
console.log(chalk.green(`\nGot it. Thanks ${username} !\n`));

console.log(chalk.black.bold.bgYellow('    AWS account    \n'));
const accounts = Object.keys(config.AWSACCOUNTS);
const index = readlineSync.keyInSelect(accounts, 'Which account do you want to connect to?');
if (index === -1) {
  return;
}

const selection = Object.keys(config.AWSACCOUNTS)[index];
console.log(selection);
if (selection === 'CUSTOM') {
  oktaUrl = readlineSync.question(chalk.yellow('Enter the OKTA AWS Account URL: '));
} else {
  oktaUrl = config.AWSACCOUNTS[selection].URL;
}

console.log(`Ok, connecting to ${accounts[index]} ...`);

// Authorization calls
const CompositionRoot = require('../lib/composition-root');

const root = CompositionRoot.compose(config);
const AWSOktaAuthorizer = root.awsOktaAuthorizer;
AWSOktaAuthorizer.Authorize(username, password, mfa, oktaUrl)
  .then(() => { console.log('Authentication succeeded. Credentials updated.'); })
  .catch(() => {
    console.log('Authentication Failed. Please try again.');
    process.exit(1);
  });
